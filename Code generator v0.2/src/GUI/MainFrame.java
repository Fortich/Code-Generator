/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import controlator.StringSplitterToDoEverithing;
import modelo.Parser;
import java.util.HashMap;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;

/**
 *
 * @author fortich
 */
public class MainFrame extends javax.swing.JFrame {

    public static StringSplitterToDoEverithing splitter = new StringSplitterToDoEverithing();
    public InstructionSetChanger isc = new InstructionSetChanger();
    
    public MainFrame() {
        initComponents();
        try{
        setIconImage(new ImageIcon(getClass().getResource("/GUI/icon.png")).getImage());
        }catch(Exception e){System.out.println("notfound");}        
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaToWrite = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        machineCodeBox = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        machineCodeBoxReadyToCopy = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        memoryLenghtArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        lengthList = new javax.swing.JComboBox<>();
        instructionSetButtom = new javax.swing.JButton();
        compileButtom = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        constantsArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UNAssembler Beta");
        setPreferredSize(new java.awt.Dimension(960, 550));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        areaToWrite.setColumns(20);
        areaToWrite.setRows(5);
        areaToWrite.setText("inA\nstoreA X\ninA\nstoreA Y\nloadA X\naddA Y\nstoreA S\nloadA S\noutA S\nFIN loadA ONE\nJPOS FIN");
        jScrollPane1.setViewportView(areaToWrite);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 40, 190, 250));

        jLabel1.setText("Assembly");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 20));

        jLabel2.setText("Machine Code");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, 20));

        machineCodeBox.setEditable(false);
        machineCodeBox.setColumns(20);
        machineCodeBox.setRows(5);
        jScrollPane3.setViewportView(machineCodeBox);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 230, 200));

        machineCodeBoxReadyToCopy.setEditable(false);
        machineCodeBoxReadyToCopy.setColumns(20);
        machineCodeBoxReadyToCopy.setRows(5);
        jScrollPane2.setViewportView(machineCodeBoxReadyToCopy);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 330, 200));

        jLabel3.setText("Machine Code - Ready to copy");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 220, 20));

        jLabel6.setText("Memory size");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 80, 20));

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        memoryLenghtArea.setColumns(20);
        memoryLenghtArea.setRows(1);
        memoryLenghtArea.setText("\n\n32");
        memoryLenghtArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane5.setViewportView(memoryLenghtArea);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 100, 20));

        jLabel4.setText("Instruction length");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, -1, 20));

        lengthList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"1 Byte", "2 Byte"}));
        lengthList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthListActionPerformed(evt);
            }
        });
        jPanel1.add(lengthList, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 110, 20));

        instructionSetButtom.setText("Instruction Set");
        instructionSetButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionSetButtomActionPerformed(evt);
            }
        });
        jPanel1.add(instructionSetButtom, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 160, 40));

        compileButtom.setText("Compile");
        compileButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtomActionPerformed(evt);
            }
        });
        jPanel1.add(compileButtom, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, 160, 40));

        jLabel5.setText("Constants");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        constantsArea.setColumns(20);
        constantsArea.setRows(5);
        constantsArea.setText("ONE 01");
        jScrollPane4.setViewportView(constantsArea);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 190, 100));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 890, 450));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("UNAssembler Beta");
        jLabel7.setToolTipText("");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 960, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lengthListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lengthListActionPerformed

    private void compileButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileButtomActionPerformed
        String instructions = areaToWrite.getText();
        String constants = constantsArea.getText();
        int bytes = lengthList.getSelectedIndex()+1;
        int memoryLenght = 32;
        try{
            memoryLenght = Integer.parseInt(memoryLenghtArea.getText());
        }catch(Exception e){
            memoryLenghtArea.setText("32");
        }
        String[] answers = splitter.toMachineCode(instructions, constants, bytes, memoryLenght);
        machineCodeBox.setText(answers[0]);
        machineCodeBoxReadyToCopy.setText(answers[1]);
    }//GEN-LAST:event_compileButtomActionPerformed

    private void instructionSetButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructionSetButtomActionPerformed
        isc.setTextInstructionTextArea(splitter.getInstructionsOnString());
        this.isc.setVisible(true);
    }//GEN-LAST:event_instructionSetButtomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaToWrite;
    private javax.swing.JButton compileButtom;
    private javax.swing.JTextArea constantsArea;
    private javax.swing.JButton instructionSetButtom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JComboBox<String> lengthList;
    private javax.swing.JTextArea machineCodeBox;
    private javax.swing.JTextArea machineCodeBoxReadyToCopy;
    private javax.swing.JTextArea memoryLenghtArea;
    // End of variables declaration//GEN-END:variables
}
